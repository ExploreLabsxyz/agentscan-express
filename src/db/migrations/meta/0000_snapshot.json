{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.teams": {
      "name": "teams",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "system_prompt_name": {
          "name": "system_prompt_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "CURRENT_TIMESTAMP"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "user_type": {
          "name": "user_type",
          "type": "user_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'consumer'"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "privy_did": {
          "name": "privy_did",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "eth_wallets": {
          "name": "eth_wallets",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "sol_wallets": {
          "name": "sol_wallets",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "pfp": {
          "name": "pfp",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "bio": {
          "name": "bio",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "fid": {
          "name": "fid",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "wallet_address": {
          "name": "wallet_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_TIMESTAMP"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_users_privy_did": {
          "name": "idx_users_privy_did",
          "columns": [
            {
              "expression": "privy_did",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_privy_did_key": {
          "columns": [
            "privy_did"
          ],
          "nullsNotDistinct": false,
          "name": "users_privy_did_key"
        },
        "users_username_key": {
          "columns": [
            "username"
          ],
          "nullsNotDistinct": false,
          "name": "users_username_key"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.discord_servers": {
      "name": "discord_servers",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.discord_allowed_channels": {
      "name": "discord_allowed_channels",
      "schema": "",
      "columns": {
        "channel_id": {
          "name": "channel_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true
        },
        "server_id": {
          "name": "server_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "enabled_by": {
          "name": "enabled_by",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "discord_allowed_channels_server_id_fkey": {
          "name": "discord_allowed_channels_server_id_fkey",
          "tableFrom": "discord_allowed_channels",
          "tableTo": "discord_servers",
          "schemaTo": "public",
          "columnsFrom": [
            "server_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.telegram_allowed_supergroups": {
      "name": "telegram_allowed_supergroups",
      "schema": "",
      "columns": {
        "chat_id": {
          "name": "chat_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "enabled_by": {
          "name": "enabled_by",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true
        },
        "enabled_at": {
          "name": "enabled_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_TIMESTAMP"
        },
        "thread_id": {
          "name": "thread_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "enabled": {
          "name": "enabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "unique_chat_thread": {
          "columns": [
            "chat_id",
            "thread_id"
          ],
          "nullsNotDistinct": false,
          "name": "unique_chat_thread"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.component_processing_status": {
      "name": "component_processing_status",
      "schema": "",
      "columns": {
        "component_id": {
          "name": "component_id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "error_message": {
          "name": "error_message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_component_status": {
          "name": "idx_component_status",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.contract_abis": {
      "name": "contract_abis",
      "schema": "",
      "columns": {
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "abi": {
          "name": "abi",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "abi_text": {
          "name": "abi_text",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "abi_embedding": {
          "name": "abi_embedding",
          "type": "vector(512)",
          "primaryKey": false,
          "notNull": false
        },
        "chain_id": {
          "name": "chain_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_TIMESTAMP"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_TIMESTAMP"
        },
        "implementation_address": {
          "name": "implementation_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "error_message": {
          "name": "error_message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "contract_abis_address_chain_id_key": {
          "columns": [
            "address",
            "chain_id"
          ],
          "nullsNotDistinct": false,
          "name": "contract_abis_address_chain_id_key"
        }
      },
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.metadata_embeddings": {
      "name": "metadata_embeddings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(512)",
          "primaryKey": false,
          "notNull": false
        },
        "service_id": {
          "name": "service_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "agent_id": {
          "name": "agent_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "component_id": {
          "name": "component_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata_content": {
          "name": "metadata_content",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "idx_metadata_embeddings_agent_id": {
          "name": "idx_metadata_embeddings_agent_id",
          "columns": [
            {
              "expression": "agent_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_metadata_embeddings_component_id": {
          "name": "idx_metadata_embeddings_component_id",
          "columns": [
            {
              "expression": "component_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_metadata_embeddings_hnsw": {
          "name": "idx_metadata_embeddings_hnsw",
          "columns": [
            {
              "expression": "embedding",
              "asc": true,
              "nulls": "last",
              "opclass": "vector_cosine_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hnsw",
          "with": {
            "m": "16",
            "ef_construction": "200"
          }
        },
        "idx_metadata_embeddings_service_id": {
          "name": "idx_metadata_embeddings_service_id",
          "columns": [
            {
              "expression": "service_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_metadata_id": {
          "name": "idx_metadata_id",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "one_id_required": {
          "name": "one_id_required",
          "value": "((((service_id IS NOT NULL))::integer + ((agent_id IS NOT NULL))::integer) + ((component_id IS NOT NULL))::integer) >= 1"
        }
      },
      "policies": {},
      "isRLSEnabled": false
    },
    "public.chat_sessions": {
      "name": "chat_sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "session_title": {
          "name": "session_title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.chat_messages": {
      "name": "chat_messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "chat_messages_session_id_fkey": {
          "name": "chat_messages_session_id_fkey",
          "tableFrom": "chat_messages",
          "tableTo": "chat_sessions",
          "schemaTo": "public",
          "columnsFrom": [
            "session_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.processing_contracts": {
      "name": "processing_contracts",
      "schema": "",
      "columns": {
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "chain_id": {
          "name": "chain_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "started_at": {
          "name": "started_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {
        "idx_processing_contracts_address": {
          "name": "idx_processing_contracts_address",
          "columns": [
            {
              "expression": "address",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "processing_contracts_pkey": {
          "name": "processing_contracts_pkey",
          "columns": [
            "address",
            "chain_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.code_embeddings": {
      "name": "code_embeddings",
      "schema": "",
      "columns": {
        "component_id": {
          "name": "component_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_path": {
          "name": "file_path",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code_content": {
          "name": "code_content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(512)",
          "primaryKey": false,
          "notNull": true
        },
        "is_chunk": {
          "name": "is_chunk",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "original_file_path": {
          "name": "original_file_path",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_code_embeddings_component_id": {
          "name": "idx_code_embeddings_component_id",
          "columns": [
            {
              "expression": "component_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_code_embeddings_hnsw_embedding": {
          "name": "idx_code_embeddings_hnsw_embedding",
          "columns": [
            {
              "expression": "embedding",
              "asc": true,
              "nulls": "last",
              "opclass": "vector_cosine_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hnsw",
          "with": {
            "m": "16",
            "ef_construction": "200"
          }
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "code_embeddings_pkey": {
          "name": "code_embeddings_pkey",
          "columns": [
            "component_id",
            "file_path"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.context_processing_status": {
      "name": "context_processing_status",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "location": {
          "name": "location",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "company_id": {
          "name": "company_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "error_message": {
          "name": "error_message",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "context_processing_status_pkey": {
          "name": "context_processing_status_pkey",
          "columns": [
            "id",
            "type"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    },
    "public.context_embeddings": {
      "name": "context_embeddings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "company_id": {
          "name": "company_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "location": {
          "name": "location",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "content": {
          "name": "content",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "embedding": {
          "name": "embedding",
          "type": "vector(512)",
          "primaryKey": false,
          "notNull": true
        },
        "is_chunk": {
          "name": "is_chunk",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "original_location": {
          "name": "original_location",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "context_embeddings_embedding_idx": {
          "name": "context_embeddings_embedding_idx",
          "columns": [
            {
              "expression": "embedding",
              "asc": true,
              "nulls": "last",
              "opclass": "vector_cosine_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hnsw",
          "with": {}
        },
        "context_embeddings_embedding_idx1": {
          "name": "context_embeddings_embedding_idx1",
          "columns": [
            {
              "expression": "embedding",
              "asc": true,
              "nulls": "last",
              "opclass": "vector_cosine_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hnsw",
          "with": {}
        },
        "context_embeddings_name_idx": {
          "name": "context_embeddings_name_idx",
          "columns": [
            {
              "expression": "to_tsvector('english'::regconfig",
              "asc": true,
              "nulls": "last",
              "opclass": "tsvector_ops",
              "isExpression": true
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "gin",
          "with": {}
        },
        "idx_context_embeddings_active": {
          "name": "idx_context_embeddings_active",
          "columns": [
            {
              "expression": "deleted_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(deleted_at IS NULL)",
          "with": {}
        },
        "idx_context_embeddings_company": {
          "name": "idx_context_embeddings_company",
          "columns": [
            {
              "expression": "company_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "type",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_context_embeddings_company_embedding": {
          "name": "idx_context_embeddings_company_embedding",
          "columns": [
            {
              "expression": "company_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "embedding",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_context_embeddings_hnsw_embedding": {
          "name": "idx_context_embeddings_hnsw_embedding",
          "columns": [
            {
              "expression": "embedding",
              "asc": true,
              "nulls": "last",
              "opclass": "vector_cosine_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hnsw",
          "with": {
            "m": "16",
            "ef_construction": "200"
          }
        },
        "idx_context_embeddings_id": {
          "name": "idx_context_embeddings_id",
          "columns": [
            {
              "expression": "id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_context_embeddings_location": {
          "name": "idx_context_embeddings_location",
          "columns": [
            {
              "expression": "location",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_context_embeddings_name": {
          "name": "idx_context_embeddings_name",
          "columns": [
            {
              "expression": "name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_context_embeddings_type": {
          "name": "idx_context_embeddings_type",
          "columns": [
            {
              "expression": "type",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {
        "context_embeddings_pkey": {
          "name": "context_embeddings_pkey",
          "columns": [
            "id",
            "type",
            "location"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.user_type": {
      "name": "user_type",
      "values": [
        "developer",
        "consumer",
        "business"
      ],
      "schema": "public"
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {
      "users": {
        "columns": {
          "eth_wallets": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "text"
          },
          "sol_wallets": {
            "isArray": true,
            "dimensions": 1,
            "rawType": "text"
          }
        }
      }
    }
  }
}